name: Continuous Integration

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '**/renovate.json' 
      - '.github/workflows/release.yaml'
  pull_request:
    paths-ignore:
      - '**.md'
      - '**/renovate.json'
      - '.github/workflows/release.yaml'
jobs:
  build:
    name: Build, Analyze & Test
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_NOLOGO: true
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}      
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: NuGet Cache
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: ${{ runner.os}}-nuget
      - name: SonarCloud Cache
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-cache
          restore-keys: ${{ runner.os}}-sonar-cache
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'          
      - name: Install .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            6.0.x
            7.0.x
      - name: Install Tools
        run: |
          dotnet tool install --global dotnet-sonarscanner 
      - name: Restore
        run: dotnet restore --verbosity Quiet
      - name: Begin SonarScanner
        run: |
          dotnet-sonarscanner begin /k:"cuid.net" /o:"xaevik" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.opencover.reportsPaths=${{ runner.temp }}/coverage.opencover.*.xml
      - name: Build
        run: dotnet build -c release --no-restore 
      - name: Test
        run: |
          dotnet test -c release --no-restore --no-build \
            -p:CollectCoverage=true \
            -p:CoverletOutputFormat=opencover \
            -p:CoverletOutput=${{ runner.temp }}/coverage.opencover.xml
      - name: End SonarScanner
        if: success() || failure()
        run: dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          